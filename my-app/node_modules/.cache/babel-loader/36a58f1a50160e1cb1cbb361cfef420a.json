{"ast":null,"code":"var _jsxFileName = \"F:\\\\Habib_University\\\\Spring_2025\\\\SE\\\\grocery-store_final\\\\my-app\\\\src\\\\pages\\\\HomePage.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import { supabase } from '../supabaseClient'; // Import the Supabase client\n// import { Container, Row, Col, Card, Button, Form, InputGroup, Toast } from 'react-bootstrap';\n// import { FaShoppingCart, FaSearch, FaHeart } from 'react-icons/fa';\n// import { useCart } from '../context/CartContext';\n// import '../styles/HomePage.css';\n\n// const HomePage = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [selectedCategory, setSelectedCategory] = useState('All');\n//   const [showToast, setShowToast] = useState(false);\n//   const { addToCart } = useCart();\n\n//   // Updated product data with correct categories and names\n//   const products = [\n//     // Fruits & Vegetables\n//     {\n//       id: 1,\n//       name: 'Mango',\n//       price: 250, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/Mango.jpeg',\n//       description: 'Fresh Mango',\n//       stock: 15\n//     },\n//     {\n//       id: 2,\n//       name: 'Strawberry',\n//       price: 400, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/strawberry.jpeg',\n//       description: 'Fresh Strawberries',\n//       stock: 10\n//     },\n//     {\n//       id: 3,\n//       name: 'Tomato',\n//       price: 120, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/tomato.jpeg',\n//       description: 'Fresh Tomatoes',\n//       stock: 20\n//     },\n//     {\n//       id: 4,\n//       name: 'Onion',\n//       price: 80, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/onion.jpeg',\n//       description: 'Fresh Onions',\n//       stock: 25\n//     },\n//     {\n//       id: 5,\n//       name: 'Potato',\n//       price: 100, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/potato.jpeg',\n//       description: 'Fresh Potatoes',\n//       stock: 30\n//     },\n//     {\n//       id: 6,\n//       name: 'Apples',\n//       price: 300, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/apples.jpg',\n//       description: 'Fresh Apples',\n//       stock: 18\n//     },\n//     {\n//       id: 7,\n//       name: 'Banana',\n//       price: 150, // PKR per dozen\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/banana.jpeg',\n//       description: 'Fresh Bananas',\n//       stock: 22\n//     },\n//     {\n//       id: 8,\n//       name: 'Bottle Gourd',\n//       price: 90, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/BottleGourd.jpeg',\n//       description: 'Fresh Bottle Gourd',\n//       stock: 12\n//     },\n//     {\n//       id: 9,\n//       name: 'Carrot',\n//       price: 110, // PKR per kg\n//       category: 'Fruits & Vegetables',\n//       image: '../pictures/Carrot.jpeg',\n//       description: 'Fresh Carrots',\n//       stock: 20\n//     },\n//     // Dairy\n//     {\n//       id: 10,\n//       name: 'Milk',\n//       price: 180, // PKR per liter\n//       category: 'Dairy',\n//       image: '../pictures/Milk.jpg',\n//       description: 'Fresh Milk',\n//       stock: 15\n//     },\n//     {\n//       id: 11,\n//       name: 'Cheese',\n//       price: 450, // PKR per 250g\n//       category: 'Dairy',\n//       image: '../pictures/Cheese.jpg',\n//       description: 'Cheddar Cheese',\n//       stock: 8\n//     },\n//     {\n//       id: 12,\n//       name: 'Butter',\n//       price: 350, // PKR per 250g\n//       category: 'Dairy',\n//       image: '../pictures/butter.jpeg',\n//       description: 'Fresh Butter',\n//       stock: 10\n//     },\n//     {\n//       id: 13,\n//       name: 'Cream',\n//       price: 250, // PKR per 200ml\n//       category: 'Dairy',\n//       image: '../pictures/cream.jpeg',\n//       description: 'Fresh Cream',\n//       stock: 12\n//     },\n//     // Bakery\n//     {\n//       id: 14,\n//       name: 'Bread',\n//       price: 120, // PKR per loaf\n//       category: 'Bakery',\n//       image: '../pictures/Bread.jpg',\n//       description: 'Fresh Bread',\n//       stock: 20\n//     },\n//     {\n//       id: 15,\n//       name: 'Eggs',\n//       price: 300, // PKR per dozen\n//       category: 'Bakery',\n//       image: '../pictures/Eggs.jpg',\n//       description: 'Fresh Eggs',\n//       stock: 15\n//     },\n//     {\n//       id: 16,\n//       name: 'Bun',\n//       price: 50, // PKR per piece\n//       category: 'Bakery',\n//       image: '../pictures/bun.jpeg',\n//       description: 'Fresh Buns',\n//       stock: 25\n//     },\n//     {\n//       id: 17,\n//       name: 'Pastry',\n//       price: 150, // PKR per piece\n//       category: 'Bakery',\n//       image: '../pictures/pastry.jpeg',\n//       description: 'Fresh Pastry',\n//       stock: 10\n//     },\n//     // Beverages\n//     {\n//       id: 18,\n//       name: 'Water',\n//       price: 80, // PKR per 1.5L\n//       category: 'Beverages',\n//       image: '../pictures/water.jpeg',\n//       description: 'Mineral Water',\n//       stock: 30\n//     },\n//     {\n//       id: 19,\n//       name: 'Soft Drink',\n//       price: 150, // PKR per 2L\n//       category: 'Beverages',\n//       image: '../pictures/Softdrink.jpeg',\n//       description: 'Carbonated Drink',\n//       stock: 20\n//     },\n//     {\n//       id: 20,\n//       name: 'Juice',\n//       price: 250, // PKR per liter\n//       category: 'Beverages',\n//       image: '../pictures/juice.jpeg',\n//       description: 'Fresh Juice',\n//       stock: 15\n//     },\n//     // Snacks\n//     {\n//       id: 21,\n//       name: 'Biscuit',\n//       price: 100, // PKR per pack\n//       category: 'Snacks',\n//       image: '../pictures/biscuit.jpeg',\n//       description: 'Assorted Biscuits',\n//       stock: 25\n//     },\n//     {\n//       id: 22,\n//       name: 'Chips',\n//       price: 120, // PKR per 150g\n//       category: 'Snacks',\n//       image: '../pictures/chips.jpeg',\n//       description: 'Potato Chips',\n//       stock: 20\n//     },\n//     {\n//       id: 23,\n//       name: 'Chips2',\n//       price: 120, // PKR per 150g\n//       category: 'Snacks',\n//       image: '../pictures/chips2.jpeg',\n//       description: 'Assorted Chips',\n//       stock: 18\n//     },\n//     {\n//       id: 24,\n//       name: 'Jelly',\n//       price: 150, // PKR per pack\n//       category: 'Snacks',\n//       image: '../pictures/jelly.jpeg',\n//       description: 'Fruit Jelly',\n//       stock: 15\n//     },\n//     {\n//       id: 25,\n//       name: 'Slanty',\n//       price: 100, // PKR per pack\n//       category: 'Snacks',\n//       image: '../pictures/slantychips.jpeg',\n//       description: 'Slanty Chips',\n//       stock: 20\n//     }\n//   ];\n\n//   const categories = [\n//     'All',\n//     'Fruits & Vegetables',\n//     'Dairy',\n//     'Bakery',\n//     'Beverages',\n//     'Snacks'\n//   ];\n\n//   const handleAddToCart = (product) => {\n//     addToCart(product);\n//     setShowToast(true);\n//     setTimeout(() => setShowToast(false), 2000);\n//   };\n\n//   const filteredProducts = products.filter(product => {\n//     const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase());\n//     const matchesCategory = selectedCategory === 'All' || product.category === selectedCategory;\n//     return matchesSearch && matchesCategory;\n//   });\n\n//   return (\n//     <Container fluid className=\"homepage-container\">\n//       {/* Toast Notification */}\n//       <div style={{ position: 'fixed', top: 20, right: 20, zIndex: 1000 }}>\n//         <Toast show={showToast} onClose={() => setShowToast(false)} delay={2000} autohide>\n//           <Toast.Header>\n//             <strong className=\"me-auto\">Success!</strong>\n//           </Toast.Header>\n//           <Toast.Body>Item added to cart</Toast.Body>\n//         </Toast>\n//       </div>\n\n//       {/* Search Bar */}\n//       <Row className=\"my-4\">\n//         <Col md={6} className=\"mx-auto\">\n//           <InputGroup className=\"search-bar\">\n//             <Form.Control\n//               placeholder=\"Search products...\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//               className=\"search-input\"\n//             />\n//             <Button variant=\"outline-primary\">\n//               <FaSearch />\n//             </Button>\n//           </InputGroup>\n//         </Col>\n//       </Row>\n\n//       <Row>\n//         {/* Categories Sidebar */}\n//         <Col md={3}>\n//           <Card className=\"categories-card\">\n//             <Card.Header className=\"bg-primary text-white\">\n//               <h5 className=\"mb-0\">Categories</h5>\n//             </Card.Header>\n//             <Card.Body className=\"p-0\">\n//               <div className=\"list-group\">\n//                 {categories.map((category) => (\n//                   <button\n//                     key={category}\n//                     className={`list-group-item list-group-item-action ${\n//                       selectedCategory === category ? 'active' : ''\n//                     }`}\n//                     onClick={() => setSelectedCategory(category)}\n//                   >\n//                     {category}\n//                   </button>\n//                 ))}\n//               </div>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n\n//         {/* Products Grid */}\n//         <Col md={9}>\n//           <Row>\n//             {filteredProducts.map((product) => (\n//               <Col key={product.id} md={4} className=\"mb-4\">\n//                 <Card className=\"product-card h-100\">\n//                   <div className=\"product-image-container\">\n//                     <Card.Img \n//                       variant=\"top\" \n//                       src={product.image}\n//                       className=\"product-image\"\n//                       alt={product.name}\n//                     />\n//                     <Button \n//                       variant=\"light\" \n//                       className=\"favorite-button\"\n//                       onClick={() => console.log('Added to favorites')}\n//                     >\n//                       <FaHeart />\n//                     </Button>\n//                   </div>\n//                   <Card.Body className=\"d-flex flex-column\">\n//                     <Card.Title className=\"product-title\">{product.name}</Card.Title>\n//                     <Card.Text className=\"text-muted product-description\">\n//                       {product.description}\n//                     </Card.Text>\n//                     <div className=\"mt-auto\">\n//                       <div className=\"d-flex justify-content-between align-items-center\">\n//                         <h5 className=\"mb-0 product-price\">Rs. {product.price}</h5>\n//                         <Button \n//                           variant=\"primary\"\n//                           className=\"add-to-cart-btn\"\n//                           onClick={() => handleAddToCart(product)}\n//                           disabled={product.stock === 0}\n//                         >\n//                           <FaShoppingCart className=\"me-2\" />\n//                           Add to Cart\n//                         </Button>\n//                       </div>\n//                     </div>\n//                   </Card.Body>\n//                 </Card>\n//               </Col>\n//             ))}\n//           </Row>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// };\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient'; // Import the Supabase client\nimport { Container, Row, Col, Card, Button, Form, InputGroup, Toast } from 'react-bootstrap';\nimport { FaShoppingCart, FaSearch, FaHeart } from 'react-icons/fa';\nimport { useCart } from '../context/CartContext';\nimport '../styles/HomePage.css';\nconst HomePage = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [showToast, setShowToast] = useState(false);\n  const [products, setProducts] = useState([]); // Initialize products as an empty array\n  const {\n    addToCart\n  } = useCart();\n\n  // Fetch products from Supabase\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('product') // Replace 'products' with your table name\n      .select('*');\n      if (error) {\n        console.error('Error fetching products:', error);\n      } else {\n        setProducts(data);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const categories = ['All', 'Fruits', 'Vegetables', 'Dairy'];\n  const handleAddToCart = product => {\n    addToCart(product);\n    setShowToast(true);\n    setTimeout(() => setShowToast(false), 2000);\n  };\n  const filteredProducts = products.filter(product => {\n    const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesCategory = selectedCategory === 'All' || product.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"homepage-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 20,\n      right: 20,\n      zIndex: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    show: showToast,\n    onClose: () => setShowToast(false),\n    delay: 2000,\n    autohide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"me-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, \"Success!\")), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, \"Item added to cart\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Search products...\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"categories-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"bg-primary text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, \"Categories\")), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 15\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(\"button\", {\n    key: category,\n    className: `list-group-item list-group-item-action ${selectedCategory === category ? 'active' : ''}`,\n    onClick: () => setSelectedCategory(category),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 19\n    }\n  }, category)))))), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, filteredProducts.map(product => /*#__PURE__*/React.createElement(Col, {\n    key: product.id,\n    md: 4,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"product-card h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: product.image,\n    className: \"product-image\",\n    alt: product.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"light\",\n    className: \"favorite-button\",\n    onClick: () => console.log('Added to favorites'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FaHeart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"product-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 21\n    }\n  }, product.name), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"text-muted product-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 21\n    }\n  }, product.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-0 product-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 25\n    }\n  }, \"Rs. \", product.price), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"add-to-cart-btn\",\n    onClick: () => handleAddToCart(product),\n    disabled: product.stockQuantity === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaShoppingCart, {\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 27\n    }\n  }), \"Add to Cart\")))))))))));\n};\nexport default HomePage;","map":{"version":3,"names":["React","useState","useEffect","supabase","Container","Row","Col","Card","Button","Form","InputGroup","Toast","FaShoppingCart","FaSearch","FaHeart","useCart","HomePage","searchQuery","setSearchQuery","selectedCategory","setSelectedCategory","showToast","setShowToast","products","setProducts","addToCart","fetchProducts","data","error","from","select","console","categories","handleAddToCart","product","setTimeout","filteredProducts","filter","matchesSearch","name","toLowerCase","includes","matchesCategory","category","createElement","fluid","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","right","zIndex","show","onClose","delay","autohide","Header","Body","md","Control","placeholder","value","onChange","e","target","variant","map","key","onClick","id","Img","src","image","alt","log","Title","Text","description","price","disabled","stockQuantity"],"sources":["F:/Habib_University/Spring_2025/SE/grocery-store_final/my-app/src/pages/HomePage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { supabase } from '../supabaseClient'; // Import the Supabase client\r\n// import { Container, Row, Col, Card, Button, Form, InputGroup, Toast } from 'react-bootstrap';\r\n// import { FaShoppingCart, FaSearch, FaHeart } from 'react-icons/fa';\r\n// import { useCart } from '../context/CartContext';\r\n// import '../styles/HomePage.css';\r\n\r\n// const HomePage = () => {\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [selectedCategory, setSelectedCategory] = useState('All');\r\n//   const [showToast, setShowToast] = useState(false);\r\n//   const { addToCart } = useCart();\r\n\r\n//   // Updated product data with correct categories and names\r\n//   const products = [\r\n//     // Fruits & Vegetables\r\n//     {\r\n//       id: 1,\r\n//       name: 'Mango',\r\n//       price: 250, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/Mango.jpeg',\r\n//       description: 'Fresh Mango',\r\n//       stock: 15\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'Strawberry',\r\n//       price: 400, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/strawberry.jpeg',\r\n//       description: 'Fresh Strawberries',\r\n//       stock: 10\r\n//     },\r\n//     {\r\n//       id: 3,\r\n//       name: 'Tomato',\r\n//       price: 120, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/tomato.jpeg',\r\n//       description: 'Fresh Tomatoes',\r\n//       stock: 20\r\n//     },\r\n//     {\r\n//       id: 4,\r\n//       name: 'Onion',\r\n//       price: 80, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/onion.jpeg',\r\n//       description: 'Fresh Onions',\r\n//       stock: 25\r\n//     },\r\n//     {\r\n//       id: 5,\r\n//       name: 'Potato',\r\n//       price: 100, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/potato.jpeg',\r\n//       description: 'Fresh Potatoes',\r\n//       stock: 30\r\n//     },\r\n//     {\r\n//       id: 6,\r\n//       name: 'Apples',\r\n//       price: 300, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/apples.jpg',\r\n//       description: 'Fresh Apples',\r\n//       stock: 18\r\n//     },\r\n//     {\r\n//       id: 7,\r\n//       name: 'Banana',\r\n//       price: 150, // PKR per dozen\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/banana.jpeg',\r\n//       description: 'Fresh Bananas',\r\n//       stock: 22\r\n//     },\r\n//     {\r\n//       id: 8,\r\n//       name: 'Bottle Gourd',\r\n//       price: 90, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/BottleGourd.jpeg',\r\n//       description: 'Fresh Bottle Gourd',\r\n//       stock: 12\r\n//     },\r\n//     {\r\n//       id: 9,\r\n//       name: 'Carrot',\r\n//       price: 110, // PKR per kg\r\n//       category: 'Fruits & Vegetables',\r\n//       image: '../pictures/Carrot.jpeg',\r\n//       description: 'Fresh Carrots',\r\n//       stock: 20\r\n//     },\r\n//     // Dairy\r\n//     {\r\n//       id: 10,\r\n//       name: 'Milk',\r\n//       price: 180, // PKR per liter\r\n//       category: 'Dairy',\r\n//       image: '../pictures/Milk.jpg',\r\n//       description: 'Fresh Milk',\r\n//       stock: 15\r\n//     },\r\n//     {\r\n//       id: 11,\r\n//       name: 'Cheese',\r\n//       price: 450, // PKR per 250g\r\n//       category: 'Dairy',\r\n//       image: '../pictures/Cheese.jpg',\r\n//       description: 'Cheddar Cheese',\r\n//       stock: 8\r\n//     },\r\n//     {\r\n//       id: 12,\r\n//       name: 'Butter',\r\n//       price: 350, // PKR per 250g\r\n//       category: 'Dairy',\r\n//       image: '../pictures/butter.jpeg',\r\n//       description: 'Fresh Butter',\r\n//       stock: 10\r\n//     },\r\n//     {\r\n//       id: 13,\r\n//       name: 'Cream',\r\n//       price: 250, // PKR per 200ml\r\n//       category: 'Dairy',\r\n//       image: '../pictures/cream.jpeg',\r\n//       description: 'Fresh Cream',\r\n//       stock: 12\r\n//     },\r\n//     // Bakery\r\n//     {\r\n//       id: 14,\r\n//       name: 'Bread',\r\n//       price: 120, // PKR per loaf\r\n//       category: 'Bakery',\r\n//       image: '../pictures/Bread.jpg',\r\n//       description: 'Fresh Bread',\r\n//       stock: 20\r\n//     },\r\n//     {\r\n//       id: 15,\r\n//       name: 'Eggs',\r\n//       price: 300, // PKR per dozen\r\n//       category: 'Bakery',\r\n//       image: '../pictures/Eggs.jpg',\r\n//       description: 'Fresh Eggs',\r\n//       stock: 15\r\n//     },\r\n//     {\r\n//       id: 16,\r\n//       name: 'Bun',\r\n//       price: 50, // PKR per piece\r\n//       category: 'Bakery',\r\n//       image: '../pictures/bun.jpeg',\r\n//       description: 'Fresh Buns',\r\n//       stock: 25\r\n//     },\r\n//     {\r\n//       id: 17,\r\n//       name: 'Pastry',\r\n//       price: 150, // PKR per piece\r\n//       category: 'Bakery',\r\n//       image: '../pictures/pastry.jpeg',\r\n//       description: 'Fresh Pastry',\r\n//       stock: 10\r\n//     },\r\n//     // Beverages\r\n//     {\r\n//       id: 18,\r\n//       name: 'Water',\r\n//       price: 80, // PKR per 1.5L\r\n//       category: 'Beverages',\r\n//       image: '../pictures/water.jpeg',\r\n//       description: 'Mineral Water',\r\n//       stock: 30\r\n//     },\r\n//     {\r\n//       id: 19,\r\n//       name: 'Soft Drink',\r\n//       price: 150, // PKR per 2L\r\n//       category: 'Beverages',\r\n//       image: '../pictures/Softdrink.jpeg',\r\n//       description: 'Carbonated Drink',\r\n//       stock: 20\r\n//     },\r\n//     {\r\n//       id: 20,\r\n//       name: 'Juice',\r\n//       price: 250, // PKR per liter\r\n//       category: 'Beverages',\r\n//       image: '../pictures/juice.jpeg',\r\n//       description: 'Fresh Juice',\r\n//       stock: 15\r\n//     },\r\n//     // Snacks\r\n//     {\r\n//       id: 21,\r\n//       name: 'Biscuit',\r\n//       price: 100, // PKR per pack\r\n//       category: 'Snacks',\r\n//       image: '../pictures/biscuit.jpeg',\r\n//       description: 'Assorted Biscuits',\r\n//       stock: 25\r\n//     },\r\n//     {\r\n//       id: 22,\r\n//       name: 'Chips',\r\n//       price: 120, // PKR per 150g\r\n//       category: 'Snacks',\r\n//       image: '../pictures/chips.jpeg',\r\n//       description: 'Potato Chips',\r\n//       stock: 20\r\n//     },\r\n//     {\r\n//       id: 23,\r\n//       name: 'Chips2',\r\n//       price: 120, // PKR per 150g\r\n//       category: 'Snacks',\r\n//       image: '../pictures/chips2.jpeg',\r\n//       description: 'Assorted Chips',\r\n//       stock: 18\r\n//     },\r\n//     {\r\n//       id: 24,\r\n//       name: 'Jelly',\r\n//       price: 150, // PKR per pack\r\n//       category: 'Snacks',\r\n//       image: '../pictures/jelly.jpeg',\r\n//       description: 'Fruit Jelly',\r\n//       stock: 15\r\n//     },\r\n//     {\r\n//       id: 25,\r\n//       name: 'Slanty',\r\n//       price: 100, // PKR per pack\r\n//       category: 'Snacks',\r\n//       image: '../pictures/slantychips.jpeg',\r\n//       description: 'Slanty Chips',\r\n//       stock: 20\r\n//     }\r\n//   ];\r\n\r\n//   const categories = [\r\n//     'All',\r\n//     'Fruits & Vegetables',\r\n//     'Dairy',\r\n//     'Bakery',\r\n//     'Beverages',\r\n//     'Snacks'\r\n//   ];\r\n\r\n//   const handleAddToCart = (product) => {\r\n//     addToCart(product);\r\n//     setShowToast(true);\r\n//     setTimeout(() => setShowToast(false), 2000);\r\n//   };\r\n\r\n//   const filteredProducts = products.filter(product => {\r\n//     const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n//     const matchesCategory = selectedCategory === 'All' || product.category === selectedCategory;\r\n//     return matchesSearch && matchesCategory;\r\n//   });\r\n\r\n//   return (\r\n//     <Container fluid className=\"homepage-container\">\r\n//       {/* Toast Notification */}\r\n//       <div style={{ position: 'fixed', top: 20, right: 20, zIndex: 1000 }}>\r\n//         <Toast show={showToast} onClose={() => setShowToast(false)} delay={2000} autohide>\r\n//           <Toast.Header>\r\n//             <strong className=\"me-auto\">Success!</strong>\r\n//           </Toast.Header>\r\n//           <Toast.Body>Item added to cart</Toast.Body>\r\n//         </Toast>\r\n//       </div>\r\n\r\n//       {/* Search Bar */}\r\n//       <Row className=\"my-4\">\r\n//         <Col md={6} className=\"mx-auto\">\r\n//           <InputGroup className=\"search-bar\">\r\n//             <Form.Control\r\n//               placeholder=\"Search products...\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//               className=\"search-input\"\r\n//             />\r\n//             <Button variant=\"outline-primary\">\r\n//               <FaSearch />\r\n//             </Button>\r\n//           </InputGroup>\r\n//         </Col>\r\n//       </Row>\r\n\r\n//       <Row>\r\n//         {/* Categories Sidebar */}\r\n//         <Col md={3}>\r\n//           <Card className=\"categories-card\">\r\n//             <Card.Header className=\"bg-primary text-white\">\r\n//               <h5 className=\"mb-0\">Categories</h5>\r\n//             </Card.Header>\r\n//             <Card.Body className=\"p-0\">\r\n//               <div className=\"list-group\">\r\n//                 {categories.map((category) => (\r\n//                   <button\r\n//                     key={category}\r\n//                     className={`list-group-item list-group-item-action ${\r\n//                       selectedCategory === category ? 'active' : ''\r\n//                     }`}\r\n//                     onClick={() => setSelectedCategory(category)}\r\n//                   >\r\n//                     {category}\r\n//                   </button>\r\n//                 ))}\r\n//               </div>\r\n//             </Card.Body>\r\n//           </Card>\r\n//         </Col>\r\n\r\n//         {/* Products Grid */}\r\n//         <Col md={9}>\r\n//           <Row>\r\n//             {filteredProducts.map((product) => (\r\n//               <Col key={product.id} md={4} className=\"mb-4\">\r\n//                 <Card className=\"product-card h-100\">\r\n//                   <div className=\"product-image-container\">\r\n//                     <Card.Img \r\n//                       variant=\"top\" \r\n//                       src={product.image}\r\n//                       className=\"product-image\"\r\n//                       alt={product.name}\r\n//                     />\r\n//                     <Button \r\n//                       variant=\"light\" \r\n//                       className=\"favorite-button\"\r\n//                       onClick={() => console.log('Added to favorites')}\r\n//                     >\r\n//                       <FaHeart />\r\n//                     </Button>\r\n//                   </div>\r\n//                   <Card.Body className=\"d-flex flex-column\">\r\n//                     <Card.Title className=\"product-title\">{product.name}</Card.Title>\r\n//                     <Card.Text className=\"text-muted product-description\">\r\n//                       {product.description}\r\n//                     </Card.Text>\r\n//                     <div className=\"mt-auto\">\r\n//                       <div className=\"d-flex justify-content-between align-items-center\">\r\n//                         <h5 className=\"mb-0 product-price\">Rs. {product.price}</h5>\r\n//                         <Button \r\n//                           variant=\"primary\"\r\n//                           className=\"add-to-cart-btn\"\r\n//                           onClick={() => handleAddToCart(product)}\r\n//                           disabled={product.stock === 0}\r\n//                         >\r\n//                           <FaShoppingCart className=\"me-2\" />\r\n//                           Add to Cart\r\n//                         </Button>\r\n//                       </div>\r\n//                     </div>\r\n//                   </Card.Body>\r\n//                 </Card>\r\n//               </Col>\r\n//             ))}\r\n//           </Row>\r\n//         </Col>\r\n//       </Row>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { supabase } from './supabaseClient'; // Import the Supabase client\r\nimport { Container, Row, Col, Card, Button, Form, InputGroup, Toast } from 'react-bootstrap';\r\nimport { FaShoppingCart, FaSearch, FaHeart } from 'react-icons/fa';\r\nimport { useCart } from '../context/CartContext';\r\nimport '../styles/HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('All');\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [products, setProducts] = useState([]); // Initialize products as an empty array\r\n  const { addToCart } = useCart();\r\n\r\n  // Fetch products from Supabase\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const { data, error } = await supabase\r\n        .from('product') // Replace 'products' with your table name\r\n        .select('*');\r\n\r\n      if (error) {\r\n        console.error('Error fetching products:', error);\r\n      } else {\r\n        setProducts(data);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const categories = [\r\n    'All',\r\n    'Fruits',\r\n    'Vegetables',\r\n    'Dairy'\r\n  ];\r\n\r\n  const handleAddToCart = (product) => {\r\n    addToCart(product);\r\n    setShowToast(true);\r\n    setTimeout(() => setShowToast(false), 2000);\r\n  };\r\n\r\n  const filteredProducts = products.filter(product => {\r\n    const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n    const matchesCategory = selectedCategory === 'All' || product.category === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  return (\r\n    <Container fluid className=\"homepage-container\">\r\n      {/* Toast Notification */}\r\n      <div style={{ position: 'fixed', top: 20, right: 20, zIndex: 1000 }}>\r\n        <Toast show={showToast} onClose={() => setShowToast(false)} delay={2000} autohide>\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">Success!</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>Item added to cart</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n\r\n      {/* Search Bar */}\r\n      <Row className=\"my-4\">\r\n        <Col md={6} className=\"mx-auto\">\r\n          <InputGroup className=\"search-bar\">\r\n            <Form.Control\r\n              placeholder=\"Search products...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n            <Button variant=\"outline-primary\">\r\n              <FaSearch />\r\n            </Button>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Categories Sidebar */}\r\n        <Col md={3}>\r\n          <Card className=\"categories-card\">\r\n            <Card.Header className=\"bg-primary text-white\">\r\n              <h5 className=\"mb-0\">Categories</h5>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0\">\r\n              <div className=\"list-group\">\r\n                {categories.map((category) => (\r\n                  <button\r\n                    key={category}\r\n                    className={`list-group-item list-group-item-action ${\r\n                      selectedCategory === category ? 'active' : ''\r\n                    }`}\r\n                    onClick={() => setSelectedCategory(category)}\r\n                  >\r\n                    {category}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        {/* Products Grid */}\r\n        <Col md={9}>\r\n          <Row>\r\n            {filteredProducts.map((product) => (\r\n              <Col key={product.id} md={4} className=\"mb-4\">\r\n                <Card className=\"product-card h-100\">\r\n                  <div className=\"product-image-container\">\r\n                    <Card.Img \r\n                      variant=\"top\" \r\n                      src={product.image}\r\n                      className=\"product-image\"\r\n                      alt={product.name}\r\n                    />\r\n                    <Button \r\n                      variant=\"light\" \r\n                      className=\"favorite-button\"\r\n                      onClick={() => console.log('Added to favorites')}\r\n                    >\r\n                      <FaHeart />\r\n                    </Button>\r\n                  </div>\r\n                  <Card.Body className=\"d-flex flex-column\">\r\n                    <Card.Title className=\"product-title\">{product.name}</Card.Title>\r\n                    <Card.Text className=\"text-muted product-description\">\r\n                      {product.description}\r\n                    </Card.Text>\r\n                    <div className=\"mt-auto\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <h5 className=\"mb-0 product-price\">Rs. {product.price}</h5>\r\n                        <Button \r\n                          variant=\"primary\"\r\n                          className=\"add-to-cart-btn\"\r\n                          onClick={() => handleAddToCart(product)}\r\n                          disabled={product.stockQuantity === 0}\r\n                        >\r\n                          <FaShoppingCart className=\"me-2\" />\r\n                          Add to Cart\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappingslD,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,QAAQ,iBAAiB;AAC5F,SAASC,cAAc,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAgB;AAClE,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,wBAAwB;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM;IAAEwB;EAAU,CAAC,GAAGV,OAAO,CAAC,CAAC;;EAE/B;EACAb,SAAS,CAAC,MAAM;IACd,MAAMwB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMzB,QAAQ,CACnC0B,IAAI,CAAC,SAAS,CAAC,CAAC;MAAA,CAChBC,MAAM,CAAC,GAAG,CAAC;MAEd,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,MAAM;QACLJ,WAAW,CAACG,IAAI,CAAC;MACnB;IACF,CAAC;IAEDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAG,CACjB,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,OAAO,CACR;EAED,MAAMC,eAAe,GAAIC,OAAO,IAAK;IACnCT,SAAS,CAACS,OAAO,CAAC;IAClBZ,YAAY,CAAC,IAAI,CAAC;IAClBa,UAAU,CAAC,MAAMb,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC7C,CAAC;EAED,MAAMc,gBAAgB,GAAGb,QAAQ,CAACc,MAAM,CAACH,OAAO,IAAI;IAClD,MAAMI,aAAa,GAAGJ,OAAO,CAACK,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxB,WAAW,CAACuB,WAAW,CAAC,CAAC,CAAC;IACpF,MAAME,eAAe,GAAGvB,gBAAgB,KAAK,KAAK,IAAIe,OAAO,CAACS,QAAQ,KAAKxB,gBAAgB;IAC3F,OAAOmB,aAAa,IAAII,eAAe;EACzC,CAAC,CAAC;EAEF,oBACE1C,KAAA,CAAA4C,aAAA,CAACxC,SAAS;IAACyC,KAAK;IAACC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE7CpD,KAAA,CAAA4C,aAAA;IAAKS,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClEpD,KAAA,CAAA4C,aAAA,CAACjC,KAAK;IAAC+C,IAAI,EAAErC,SAAU;IAACsC,OAAO,EAAEA,CAAA,KAAMrC,YAAY,CAAC,KAAK,CAAE;IAACsC,KAAK,EAAE,IAAK;IAACC,QAAQ;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/EpD,KAAA,CAAA4C,aAAA,CAACjC,KAAK,CAACmD,MAAM;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXpD,KAAA,CAAA4C,aAAA;IAAQE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAChC,CAAC,eACfpD,KAAA,CAAA4C,aAAA,CAACjC,KAAK,CAACoD,IAAI;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAA8B,CACrC,CACJ,CAAC,eAGNpD,KAAA,CAAA4C,aAAA,CAACvC,GAAG;IAACyC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBpD,KAAA,CAAA4C,aAAA,CAACtC,GAAG;IAAC0D,EAAE,EAAE,CAAE;IAAClB,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BpD,KAAA,CAAA4C,aAAA,CAAClC,UAAU;IAACoC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCpD,KAAA,CAAA4C,aAAA,CAACnC,IAAI,CAACwD,OAAO;IACXC,WAAW,EAAC,oBAAoB;IAChCC,KAAK,EAAElD,WAAY;IACnBmD,QAAQ,EAAGC,CAAC,IAAKnD,cAAc,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAChDrB,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzB,CAAC,eACFpD,KAAA,CAAA4C,aAAA,CAACpC,MAAM;IAAC+D,OAAO,EAAC,iBAAiB;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BpD,KAAA,CAAA4C,aAAA,CAAC/B,QAAQ;IAAAkC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACL,CACE,CACT,CACF,CAAC,eAENpD,KAAA,CAAA4C,aAAA,CAACvC,GAAG;IAAA0C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFpD,KAAA,CAAA4C,aAAA,CAACtC,GAAG;IAAC0D,EAAE,EAAE,CAAE;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACTpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI;IAACuC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI,CAACuD,MAAM;IAAChB,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CpD,KAAA,CAAA4C,aAAA;IAAIE,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAc,CACxB,CAAC,eACdpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI,CAACwD,IAAI;IAACjB,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBpD,KAAA,CAAA4C,aAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBpB,UAAU,CAACwC,GAAG,CAAE7B,QAAQ,iBACvB3C,KAAA,CAAA4C,aAAA;IACE6B,GAAG,EAAE9B,QAAS;IACdG,SAAS,EAAE,0CACT3B,gBAAgB,KAAKwB,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAC5C;IACH+B,OAAO,EAAEA,CAAA,KAAMtD,mBAAmB,CAACuB,QAAQ,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE5CT,QACK,CACT,CACE,CACI,CACP,CACH,CAAC,eAGN3C,KAAA,CAAA4C,aAAA,CAACtC,GAAG;IAAC0D,EAAE,EAAE,CAAE;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACTpD,KAAA,CAAA4C,aAAA,CAACvC,GAAG;IAAA0C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACDhB,gBAAgB,CAACoC,GAAG,CAAEtC,OAAO,iBAC5BlC,KAAA,CAAA4C,aAAA,CAACtC,GAAG;IAACmE,GAAG,EAAEvC,OAAO,CAACyC,EAAG;IAACX,EAAE,EAAE,CAAE;IAAClB,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI;IAACuC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCpD,KAAA,CAAA4C,aAAA;IAAKE,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtCpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI,CAACqE,GAAG;IACPL,OAAO,EAAC,KAAK;IACbM,GAAG,EAAE3C,OAAO,CAAC4C,KAAM;IACnBhC,SAAS,EAAC,eAAe;IACzBiC,GAAG,EAAE7C,OAAO,CAACK,IAAK;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CAAC,eACFpD,KAAA,CAAA4C,aAAA,CAACpC,MAAM;IACL+D,OAAO,EAAC,OAAO;IACfzB,SAAS,EAAC,iBAAiB;IAC3B4B,OAAO,EAAEA,CAAA,KAAM3C,OAAO,CAACiD,GAAG,CAAC,oBAAoB,CAAE;IAAAjC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEjDpD,KAAA,CAAA4C,aAAA,CAAC9B,OAAO;IAAAiC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACJ,CACL,CAAC,eACNpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI,CAACwD,IAAI;IAACjB,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCpD,KAAA,CAAA4C,aAAA,CAACrC,IAAI,CAAC0E,KAAK;IAACnC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAElB,OAAO,CAACK,IAAiB,CAAC,eACjEvC,KAAA,CAAA4C,aAAA,CAACrC,IAAI,CAAC2E,IAAI;IAACpC,SAAS,EAAC,gCAAgC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClDlB,OAAO,CAACiD,WACA,CAAC,eACZnF,KAAA,CAAA4C,aAAA;IAAKE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBpD,KAAA,CAAA4C,aAAA;IAAKE,SAAS,EAAC,mDAAmD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChEpD,KAAA,CAAA4C,aAAA;IAAIE,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAI,EAAClB,OAAO,CAACkD,KAAU,CAAC,eAC3DpF,KAAA,CAAA4C,aAAA,CAACpC,MAAM;IACL+D,OAAO,EAAC,SAAS;IACjBzB,SAAS,EAAC,iBAAiB;IAC3B4B,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAACC,OAAO,CAAE;IACxCmD,QAAQ,EAAEnD,OAAO,CAACoD,aAAa,KAAK,CAAE;IAAAvC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEtCpD,KAAA,CAAA4C,aAAA,CAAChC,cAAc;IAACkC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAE7B,CACL,CACF,CACI,CACP,CACH,CACN,CACE,CACF,CACF,CACI,CAAC;AAEhB,CAAC;AAED,eAAepC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}